Index.PACKAGES = {"silex" : [{"name" : "silex.ArraySource", "shortDescription" : "Source over an array of character.", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "silex\/ArraySource.html#GroupedIterator[B<:<?>]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "commit", "tail" : "(): (Position, Iterable[Character], Position)", "member" : "silex.ArraySource.commit", "link" : "silex\/ArraySource.html#commit():(Position,Iterable[Character],Position)", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "silex.ArraySource.reset", "link" : "silex\/ArraySource.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(): Unit", "member" : "silex.ArraySource.mark", "link" : "silex\/ArraySource.html#mark():Unit", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "silex.ArraySource.hasNext", "link" : "silex\/ArraySource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Character", "member" : "silex.ArraySource.next", "link" : "silex\/ArraySource.html#next():Character", "kind" : "def"}, {"label" : "currentPosition", "tail" : "(): Position", "member" : "silex.ArraySource.currentPosition", "link" : "silex\/ArraySource.html#currentPosition:Position", "kind" : "def"}, {"member" : "silex.ArraySource#<init>", "error" : "unsupported entity"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "silex.Source.finalize", "link" : "silex\/ArraySource.html#finalize():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "silex.Source.close", "link" : "silex\/ArraySource.html#close():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "silex\/ArraySource.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Character]", "member" : "scala.collection.Iterator.toStream", "link" : "silex\/ArraySource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Character]", "member" : "scala.collection.Iterator.toIterator", "link" : "silex\/ArraySource.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Character]", "member" : "scala.collection.Iterator.toTraversable", "link" : "silex\/ArraySource.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "silex\/ArraySource.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "silex\/ArraySource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "silex\/ArraySource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.duplicate", "link" : "silex\/ArraySource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "silex\/ArraySource.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "silex\/ArraySource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "silex\/ArraySource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Character]", "member" : "scala.collection.Iterator.buffered", "link" : "silex\/ArraySource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/ArraySource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/ArraySource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Character) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/ArraySource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Character) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/ArraySource.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Character) ⇒ Boolean): Option[Character]", "member" : "scala.collection.Iterator.find", "link" : "silex\/ArraySource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "silex\/ArraySource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Character) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "silex\/ArraySource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Character) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "silex\/ArraySource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Character) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "silex\/ArraySource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "silex\/ArraySource.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Character, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "silex\/ArraySource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "silex\/ArraySource.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Character, B)]", "member" : "scala.collection.Iterator.zip", "link" : "silex\/ArraySource.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.dropWhile", "link" : "silex\/ArraySource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Character) ⇒ Boolean): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.span", "link" : "silex\/ArraySource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Character) ⇒ Boolean): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.partition", "link" : "silex\/ArraySource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.takeWhile", "link" : "silex\/ArraySource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Character, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "silex\/ArraySource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Character) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "silex\/ArraySource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Character, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "silex\/ArraySource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.filterNot", "link" : "silex\/ArraySource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.withFilter", "link" : "silex\/ArraySource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Character, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "silex\/ArraySource.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.filter", "link" : "silex\/ArraySource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Character) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "silex\/ArraySource.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "silex\/ArraySource.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Character) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "silex\/ArraySource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Character]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "silex\/ArraySource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Character]", "member" : "scala.collection.Iterator.slice", "link" : "silex\/ArraySource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Character]", "member" : "scala.collection.Iterator.drop", "link" : "silex\/ArraySource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Character]", "member" : "scala.collection.Iterator.take", "link" : "silex\/ArraySource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "silex\/ArraySource.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "silex\/ArraySource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "silex\/ArraySource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Character]", "member" : "scala.collection.Iterator.seq", "link" : "silex\/ArraySource.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/ArraySource.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/ArraySource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/ArraySource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/ArraySource.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/ArraySource.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/ArraySource.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Character, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "silex\/ArraySource.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Character, Col[Character]]): Col[Character]", "member" : "scala.collection.TraversableOnce.to", "link" : "silex\/ArraySource.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Character]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "silex\/ArraySource.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "silex\/ArraySource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "silex\/ArraySource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Character]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "silex\/ArraySource.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Character]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "silex\/ArraySource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Character]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "silex\/ArraySource.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Character]", "member" : "scala.collection.TraversableOnce.toList", "link" : "silex\/ArraySource.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "silex\/ArraySource.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/ArraySource.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/ArraySource.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "silex\/ArraySource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Character) ⇒ B)(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.minBy", "link" : "silex\/ArraySource.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Character) ⇒ B)(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "silex\/ArraySource.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.max", "link" : "silex\/ArraySource.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.min", "link" : "silex\/ArraySource.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "silex\/ArraySource.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "silex\/ArraySource.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Character) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "silex\/ArraySource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "silex\/ArraySource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "silex\/ArraySource.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "silex\/ArraySource.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Character, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "silex\/ArraySource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Character) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "silex\/ArraySource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "silex\/ArraySource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "silex\/ArraySource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "silex\/ArraySource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "silex\/ArraySource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "silex\/ArraySource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "silex\/ArraySource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Character, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "silex\/ArraySource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Character) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "silex\/ArraySource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "silex\/ArraySource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "silex\/ArraySource.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Character]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "silex\/ArraySource.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "silex\/ArraySource.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/ArraySource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/ArraySource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/ArraySource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/ArraySource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/ArraySource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/ArraySource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/ArraySource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/ArraySource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/ArraySource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/ArraySource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/ArraySource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/ArraySource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/ArraySource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/ArraySource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/ArraySource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/ArraySource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/ArraySource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "silex\/ArraySource.html", "kind" : "class"}, {"name" : "silex.CharLexers", "members_trait" : [{"label" : "whiteSpace", "tail" : ": (CharLexers.this)#RegExp", "member" : "silex.CharLexers.whiteSpace", "link" : "silex\/CharLexers.html#whiteSpace:CharLexers.this.RegExp", "kind" : "val"}, {"label" : "hex", "tail" : ": (CharLexers.this)#RegExp", "member" : "silex.CharLexers.hex", "link" : "silex\/CharLexers.html#hex:CharLexers.this.RegExp", "kind" : "val"}, {"label" : "nonZero", "tail" : ": (CharLexers.this)#RegExp", "member" : "silex.CharLexers.nonZero", "link" : "silex\/CharLexers.html#nonZero:CharLexers.this.RegExp", "kind" : "val"}, {"label" : "digit", "tail" : ": (CharLexers.this)#RegExp", "member" : "silex.CharLexers.digit", "link" : "silex\/CharLexers.html#digit:CharLexers.this.RegExp", "kind" : "val"}, {"label" : "Character", "tail" : "", "member" : "silex.CharLexers.Character", "link" : "silex\/CharLexers.html#Character=Char", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/CharLexers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/CharLexers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/CharLexers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/CharLexers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/CharLexers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/CharLexers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/CharLexers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/CharLexers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/CharLexers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/CharLexers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/CharLexers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/CharLexers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/CharLexers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/CharLexers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/CharLexers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/CharLexers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/CharLexers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/CharLexers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/CharLexers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Specialized lexers operating on Char characters.", "trait" : "silex\/CharLexers.html", "kind" : "trait"}, {"name" : "silex.IndexPositioner", "shortDescription" : "General index-based positioner.", "object" : "silex\/IndexPositioner$.html", "members_object" : [{"label" : "increment", "tail" : "(position: Int, character: Any): Int", "member" : "silex.IndexPositioner.increment", "link" : "silex\/IndexPositioner$.html#increment(position:Int,character:Any):Int", "kind" : "def"}, {"label" : "start", "tail" : ": Int", "member" : "silex.IndexPositioner.start", "link" : "silex\/IndexPositioner$.html#start:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/IndexPositioner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/IndexPositioner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/IndexPositioner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/IndexPositioner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/IndexPositioner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/IndexPositioner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/IndexPositioner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/IndexPositioner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/IndexPositioner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/IndexPositioner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/IndexPositioner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/IndexPositioner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/IndexPositioner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/IndexPositioner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/IndexPositioner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/IndexPositioner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/IndexPositioner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/IndexPositioner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/IndexPositioner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "silex.IteratorSource", "shortDescription" : "Source over an interator.", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "silex\/IteratorSource.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "commit", "tail" : "(): (Position, Iterable[Character], Position)", "member" : "silex.IteratorSource.commit", "link" : "silex\/IteratorSource.html#commit():(Position,Iterable[Character],Position)", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "silex.IteratorSource.reset", "link" : "silex\/IteratorSource.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(): Unit", "member" : "silex.IteratorSource.mark", "link" : "silex\/IteratorSource.html#mark():Unit", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "silex.IteratorSource.hasNext", "link" : "silex\/IteratorSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Character", "member" : "silex.IteratorSource.next", "link" : "silex\/IteratorSource.html#next():Character", "kind" : "def"}, {"label" : "currentPosition", "tail" : "(): Position", "member" : "silex.IteratorSource.currentPosition", "link" : "silex\/IteratorSource.html#currentPosition:Position", "kind" : "def"}, {"member" : "silex.IteratorSource#<init>", "error" : "unsupported entity"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "silex.Source.finalize", "link" : "silex\/IteratorSource.html#finalize():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "silex.Source.close", "link" : "silex\/IteratorSource.html#close():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "silex\/IteratorSource.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Character]", "member" : "scala.collection.Iterator.toStream", "link" : "silex\/IteratorSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Character]", "member" : "scala.collection.Iterator.toIterator", "link" : "silex\/IteratorSource.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Character]", "member" : "scala.collection.Iterator.toTraversable", "link" : "silex\/IteratorSource.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "silex\/IteratorSource.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "silex\/IteratorSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "silex\/IteratorSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.duplicate", "link" : "silex\/IteratorSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "silex\/IteratorSource.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "silex\/IteratorSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "silex\/IteratorSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Character]", "member" : "scala.collection.Iterator.buffered", "link" : "silex\/IteratorSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/IteratorSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/IteratorSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Character) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/IteratorSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Character) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/IteratorSource.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Character) ⇒ Boolean): Option[Character]", "member" : "scala.collection.Iterator.find", "link" : "silex\/IteratorSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "silex\/IteratorSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Character) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "silex\/IteratorSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Character) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "silex\/IteratorSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Character) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "silex\/IteratorSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "silex\/IteratorSource.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Character, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "silex\/IteratorSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "silex\/IteratorSource.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Character, B)]", "member" : "scala.collection.Iterator.zip", "link" : "silex\/IteratorSource.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.dropWhile", "link" : "silex\/IteratorSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Character) ⇒ Boolean): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.span", "link" : "silex\/IteratorSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Character) ⇒ Boolean): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.partition", "link" : "silex\/IteratorSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.takeWhile", "link" : "silex\/IteratorSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Character, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "silex\/IteratorSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Character) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "silex\/IteratorSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Character, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "silex\/IteratorSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.filterNot", "link" : "silex\/IteratorSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.withFilter", "link" : "silex\/IteratorSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Character, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "silex\/IteratorSource.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.filter", "link" : "silex\/IteratorSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Character) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "silex\/IteratorSource.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "silex\/IteratorSource.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Character) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "silex\/IteratorSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Character]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "silex\/IteratorSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Character]", "member" : "scala.collection.Iterator.slice", "link" : "silex\/IteratorSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Character]", "member" : "scala.collection.Iterator.drop", "link" : "silex\/IteratorSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Character]", "member" : "scala.collection.Iterator.take", "link" : "silex\/IteratorSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "silex\/IteratorSource.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "silex\/IteratorSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "silex\/IteratorSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Character]", "member" : "scala.collection.Iterator.seq", "link" : "silex\/IteratorSource.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/IteratorSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/IteratorSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/IteratorSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/IteratorSource.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/IteratorSource.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/IteratorSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Character, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "silex\/IteratorSource.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Character, Col[Character]]): Col[Character]", "member" : "scala.collection.TraversableOnce.to", "link" : "silex\/IteratorSource.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Character]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "silex\/IteratorSource.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "silex\/IteratorSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "silex\/IteratorSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Character]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "silex\/IteratorSource.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Character]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "silex\/IteratorSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Character]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "silex\/IteratorSource.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Character]", "member" : "scala.collection.TraversableOnce.toList", "link" : "silex\/IteratorSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "silex\/IteratorSource.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/IteratorSource.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/IteratorSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "silex\/IteratorSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Character) ⇒ B)(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.minBy", "link" : "silex\/IteratorSource.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Character) ⇒ B)(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "silex\/IteratorSource.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.max", "link" : "silex\/IteratorSource.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.min", "link" : "silex\/IteratorSource.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "silex\/IteratorSource.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "silex\/IteratorSource.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Character) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "silex\/IteratorSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "silex\/IteratorSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "silex\/IteratorSource.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "silex\/IteratorSource.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Character, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "silex\/IteratorSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Character) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "silex\/IteratorSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "silex\/IteratorSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "silex\/IteratorSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "silex\/IteratorSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "silex\/IteratorSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "silex\/IteratorSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "silex\/IteratorSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Character, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "silex\/IteratorSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Character) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "silex\/IteratorSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "silex\/IteratorSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "silex\/IteratorSource.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Character]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "silex\/IteratorSource.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "silex\/IteratorSource.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/IteratorSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/IteratorSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/IteratorSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/IteratorSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/IteratorSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/IteratorSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/IteratorSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/IteratorSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/IteratorSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/IteratorSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/IteratorSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/IteratorSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/IteratorSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/IteratorSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/IteratorSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/IteratorSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/IteratorSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "silex\/IteratorSource.html", "kind" : "class"}, {"name" : "silex.Lexers", "members_trait" : [{"label" : "RegExp", "tail" : "", "member" : "silex.RegExps.RegExp", "link" : "silex\/RegExps.html#RegExp", "kind" : "object"}, {"label" : "RegExp", "tail" : "", "member" : "silex.RegExps.RegExp", "link" : "silex\/RegExps.html#RegExpextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "Lexer", "tail" : "", "member" : "silex.Lexers.Lexer", "link" : "silex\/Lexers.html#Lexer", "kind" : "object"}, {"label" : "Lexer", "tail" : "", "member" : "silex.Lexers.Lexer", "link" : "silex\/Lexers.html#LexerextendsAnyRef", "kind" : "class"}, {"label" : "ProducerDecorator", "tail" : "", "member" : "silex.Lexers.ProducerDecorator", "link" : "silex\/Lexers.html#ProducerDecoratorextendsAnyRef", "kind" : "implicit class"}, {"label" : "Producer", "tail" : "", "member" : "silex.Lexers.Producer", "link" : "silex\/Lexers.html#ProducerextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TokenMaker", "tail" : "", "member" : "silex.Lexers.TokenMaker", "link" : "silex\/Lexers.html#TokenMaker=(Iterable[Lexers.this.Character],(Lexers.this.Position,Lexers.this.Position))=>Lexers.this.Token", "kind" : "type"}, {"label" : "any", "tail" : ": RegExp", "member" : "silex.RegExps.any", "link" : "silex\/Lexers.html#any:RegExps.this.RegExp", "kind" : "val"}, {"label" : "opt", "tail" : "(regExp: RegExp): RegExp", "member" : "silex.RegExps.opt", "link" : "silex\/Lexers.html#opt(regExp:RegExps.this.RegExp):RegExps.this.RegExp", "kind" : "def"}, {"label" : "many1", "tail" : "(regExp: RegExp): RegExp", "member" : "silex.RegExps.many1", "link" : "silex\/Lexers.html#many1(regExp:RegExps.this.RegExp):RegExps.this.RegExp", "kind" : "def"}, {"label" : "many", "tail" : "(regExp: RegExp): RegExp", "member" : "silex.RegExps.many", "link" : "silex\/Lexers.html#many(regExp:RegExps.this.RegExp):RegExps.this.RegExp", "kind" : "def"}, {"label" : "word", "tail" : "(chars: Seq[Character]): RegExp", "member" : "silex.RegExps.word", "link" : "silex\/Lexers.html#word(chars:Seq[RegExps.this.Character]):RegExps.this.RegExp", "kind" : "def"}, {"label" : "elem", "tail" : "(char: Character): RegExp", "member" : "silex.RegExps.elem", "link" : "silex\/Lexers.html#elem(char:RegExps.this.Character):RegExps.this.RegExp", "kind" : "def"}, {"label" : "elem", "tail" : "(predicate: (Character) ⇒ Boolean): RegExp", "member" : "silex.RegExps.elem", "link" : "silex\/Lexers.html#elem(predicate:RegExps.this.Character=>Boolean):RegExps.this.RegExp", "kind" : "def"}, {"label" : "oneOf", "tail" : "(chars: Seq[Character]): RegExp", "member" : "silex.RegExps.oneOf", "link" : "silex\/Lexers.html#oneOf(chars:Seq[RegExps.this.Character]):RegExps.this.RegExp", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/Lexers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/Lexers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/Lexers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/Lexers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/Lexers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/Lexers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/Lexers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Lexers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Lexers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Lexers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/Lexers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/Lexers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/Lexers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/Lexers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/Lexers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/Lexers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/Lexers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/Lexers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/Lexers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "silex.Lexers.Position", "error" : "unsupported entity"}, {"member" : "silex.Lexers.Token", "error" : "unsupported entity"}, {"member" : "silex.RegExps.Character", "error" : "unsupported entity"}], "shortDescription" : "Contains definitions for lexers.", "trait" : "silex\/Lexers.html", "kind" : "trait"}, {"name" : "silex.NoPositioner", "shortDescription" : "Positioner for Unit positions.", "object" : "silex\/NoPositioner$.html", "members_object" : [{"label" : "increment", "tail" : "(position: Unit, character: Any): Unit", "member" : "silex.NoPositioner.increment", "link" : "silex\/NoPositioner$.html#increment(position:Unit,character:Any):Unit", "kind" : "def"}, {"label" : "start", "tail" : ": Unit", "member" : "silex.NoPositioner.start", "link" : "silex\/NoPositioner$.html#start:Unit", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/NoPositioner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/NoPositioner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/NoPositioner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/NoPositioner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/NoPositioner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/NoPositioner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/NoPositioner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/NoPositioner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/NoPositioner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/NoPositioner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/NoPositioner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/NoPositioner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/NoPositioner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/NoPositioner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/NoPositioner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/NoPositioner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/NoPositioner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/NoPositioner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/NoPositioner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "silex.Positioner", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/Positioner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/Positioner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/Positioner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/Positioner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/Positioner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/Positioner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/Positioner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Positioner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Positioner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Positioner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/Positioner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/Positioner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/Positioner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/Positioner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/Positioner.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/Positioner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/Positioner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/Positioner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/Positioner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "increment", "tail" : "(position: Position, character: Character): Position", "member" : "silex.Positioner.increment", "link" : "silex\/Positioner.html#increment(position:Position,character:Character):Position", "kind" : "abstract def"}, {"label" : "start", "tail" : ": Position", "member" : "silex.Positioner.start", "link" : "silex\/Positioner.html#start:Position", "kind" : "abstract val"}], "shortDescription" : "Indicates the start position and how to increment positions.", "trait" : "silex\/Positioner.html", "kind" : "trait"}, {"name" : "silex.ReaderSource", "shortDescription" : "Source over a Reader.", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "silex\/ReaderSource.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "close", "tail" : "(): Unit", "member" : "silex.ReaderSource.close", "link" : "silex\/ReaderSource.html#close():Unit", "kind" : "def"}, {"label" : "commit", "tail" : "(): (Position, Iterable[Char], Position)", "member" : "silex.ReaderSource.commit", "link" : "silex\/ReaderSource.html#commit():(Position,Iterable[Char],Position)", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "silex.ReaderSource.reset", "link" : "silex\/ReaderSource.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(): Unit", "member" : "silex.ReaderSource.mark", "link" : "silex\/ReaderSource.html#mark():Unit", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "silex.ReaderSource.hasNext", "link" : "silex\/ReaderSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Char", "member" : "silex.ReaderSource.next", "link" : "silex\/ReaderSource.html#next():Char", "kind" : "def"}, {"label" : "currentPosition", "tail" : "(): Position", "member" : "silex.ReaderSource.currentPosition", "link" : "silex\/ReaderSource.html#currentPosition:Position", "kind" : "def"}, {"member" : "silex.ReaderSource#<init>", "error" : "unsupported entity"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "silex.Source.finalize", "link" : "silex\/ReaderSource.html#finalize():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "silex\/ReaderSource.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Char]", "member" : "scala.collection.Iterator.toStream", "link" : "silex\/ReaderSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Char]", "member" : "scala.collection.Iterator.toIterator", "link" : "silex\/ReaderSource.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Char]", "member" : "scala.collection.Iterator.toTraversable", "link" : "silex\/ReaderSource.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "silex\/ReaderSource.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "silex\/ReaderSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "silex\/ReaderSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Char], Iterator[Char])", "member" : "scala.collection.Iterator.duplicate", "link" : "silex\/ReaderSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "silex\/ReaderSource.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "silex\/ReaderSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "silex\/ReaderSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Char]", "member" : "scala.collection.Iterator.buffered", "link" : "silex\/ReaderSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/ReaderSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/ReaderSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Char) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/ReaderSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Char) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/ReaderSource.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Char) ⇒ Boolean): Option[Char]", "member" : "scala.collection.Iterator.find", "link" : "silex\/ReaderSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "silex\/ReaderSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Char) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "silex\/ReaderSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Char) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "silex\/ReaderSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Char) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "silex\/ReaderSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "silex\/ReaderSource.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Char, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "silex\/ReaderSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "silex\/ReaderSource.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Char, B)]", "member" : "scala.collection.Iterator.zip", "link" : "silex\/ReaderSource.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.dropWhile", "link" : "silex\/ReaderSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Char) ⇒ Boolean): (Iterator[Char], Iterator[Char])", "member" : "scala.collection.Iterator.span", "link" : "silex\/ReaderSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Char) ⇒ Boolean): (Iterator[Char], Iterator[Char])", "member" : "scala.collection.Iterator.partition", "link" : "silex\/ReaderSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.takeWhile", "link" : "silex\/ReaderSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Char, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "silex\/ReaderSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Char) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "silex\/ReaderSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Char, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "silex\/ReaderSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.filterNot", "link" : "silex\/ReaderSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.withFilter", "link" : "silex\/ReaderSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Char, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "silex\/ReaderSource.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.filter", "link" : "silex\/ReaderSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Char) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "silex\/ReaderSource.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "silex\/ReaderSource.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Char) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "silex\/ReaderSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Char]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "silex\/ReaderSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Char]", "member" : "scala.collection.Iterator.slice", "link" : "silex\/ReaderSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Char]", "member" : "scala.collection.Iterator.drop", "link" : "silex\/ReaderSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Char]", "member" : "scala.collection.Iterator.take", "link" : "silex\/ReaderSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "silex\/ReaderSource.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "silex\/ReaderSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "silex\/ReaderSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Char]", "member" : "scala.collection.Iterator.seq", "link" : "silex\/ReaderSource.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/ReaderSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/ReaderSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/ReaderSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/ReaderSource.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/ReaderSource.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/ReaderSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Char, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "silex\/ReaderSource.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Char, Col[Char]]): Col[Char]", "member" : "scala.collection.TraversableOnce.to", "link" : "silex\/ReaderSource.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Char]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "silex\/ReaderSource.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "silex\/ReaderSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "silex\/ReaderSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Char]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "silex\/ReaderSource.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Char]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "silex\/ReaderSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Char]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "silex\/ReaderSource.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Char]", "member" : "scala.collection.TraversableOnce.toList", "link" : "silex\/ReaderSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "silex\/ReaderSource.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/ReaderSource.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/ReaderSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "silex\/ReaderSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Char) ⇒ B)(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.minBy", "link" : "silex\/ReaderSource.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Char) ⇒ B)(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "silex\/ReaderSource.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.max", "link" : "silex\/ReaderSource.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.min", "link" : "silex\/ReaderSource.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "silex\/ReaderSource.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "silex\/ReaderSource.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Char) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "silex\/ReaderSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "silex\/ReaderSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "silex\/ReaderSource.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "silex\/ReaderSource.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Char, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "silex\/ReaderSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Char) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "silex\/ReaderSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Char, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "silex\/ReaderSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Char) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "silex\/ReaderSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Char, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "silex\/ReaderSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Char) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "silex\/ReaderSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Char, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "silex\/ReaderSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Char) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "silex\/ReaderSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Char, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "silex\/ReaderSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Char) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "silex\/ReaderSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "silex\/ReaderSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "silex\/ReaderSource.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Char]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "silex\/ReaderSource.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "silex\/ReaderSource.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/ReaderSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/ReaderSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/ReaderSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/ReaderSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/ReaderSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/ReaderSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/ReaderSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/ReaderSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/ReaderSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/ReaderSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/ReaderSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/ReaderSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/ReaderSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/ReaderSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/ReaderSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/ReaderSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/ReaderSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "silex\/ReaderSource.html", "kind" : "class"}, {"name" : "silex.RegExps", "members_trait" : [{"label" : "any", "tail" : ": RegExp", "member" : "silex.RegExps.any", "link" : "silex\/RegExps.html#any:RegExps.this.RegExp", "kind" : "val"}, {"label" : "opt", "tail" : "(regExp: RegExp): RegExp", "member" : "silex.RegExps.opt", "link" : "silex\/RegExps.html#opt(regExp:RegExps.this.RegExp):RegExps.this.RegExp", "kind" : "def"}, {"label" : "many1", "tail" : "(regExp: RegExp): RegExp", "member" : "silex.RegExps.many1", "link" : "silex\/RegExps.html#many1(regExp:RegExps.this.RegExp):RegExps.this.RegExp", "kind" : "def"}, {"label" : "many", "tail" : "(regExp: RegExp): RegExp", "member" : "silex.RegExps.many", "link" : "silex\/RegExps.html#many(regExp:RegExps.this.RegExp):RegExps.this.RegExp", "kind" : "def"}, {"label" : "word", "tail" : "(chars: Seq[Character]): RegExp", "member" : "silex.RegExps.word", "link" : "silex\/RegExps.html#word(chars:Seq[RegExps.this.Character]):RegExps.this.RegExp", "kind" : "def"}, {"label" : "elem", "tail" : "(char: Character): RegExp", "member" : "silex.RegExps.elem", "link" : "silex\/RegExps.html#elem(char:RegExps.this.Character):RegExps.this.RegExp", "kind" : "def"}, {"label" : "elem", "tail" : "(predicate: (Character) ⇒ Boolean): RegExp", "member" : "silex.RegExps.elem", "link" : "silex\/RegExps.html#elem(predicate:RegExps.this.Character=>Boolean):RegExps.this.RegExp", "kind" : "def"}, {"label" : "oneOf", "tail" : "(chars: Seq[Character]): RegExp", "member" : "silex.RegExps.oneOf", "link" : "silex\/RegExps.html#oneOf(chars:Seq[RegExps.this.Character]):RegExps.this.RegExp", "kind" : "def"}, {"label" : "RegExp", "tail" : "", "member" : "silex.RegExps.RegExp", "link" : "silex\/RegExps.html#RegExp", "kind" : "object"}, {"label" : "RegExp", "tail" : "", "member" : "silex.RegExps.RegExp", "link" : "silex\/RegExps.html#RegExpextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/RegExps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/RegExps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/RegExps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/RegExps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/RegExps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/RegExps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/RegExps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/RegExps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/RegExps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/RegExps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/RegExps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/RegExps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/RegExps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/RegExps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/RegExps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/RegExps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/RegExps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/RegExps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/RegExps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "silex.RegExps.Character", "error" : "unsupported entity"}], "shortDescription" : "Contains definitions relating to regular expressions.", "trait" : "silex\/RegExps.html", "kind" : "trait"}, {"name" : "silex.Source", "members_trait" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "silex\/Source.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "silex.Source.finalize", "link" : "silex\/Source.html#finalize():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "silex.Source.close", "link" : "silex\/Source.html#close():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "silex\/Source.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Character]", "member" : "scala.collection.Iterator.toStream", "link" : "silex\/Source.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Character]", "member" : "scala.collection.Iterator.toIterator", "link" : "silex\/Source.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Character]", "member" : "scala.collection.Iterator.toTraversable", "link" : "silex\/Source.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "silex\/Source.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "silex\/Source.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "silex\/Source.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.duplicate", "link" : "silex\/Source.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "silex\/Source.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "silex\/Source.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "silex\/Source.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Character]", "member" : "scala.collection.Iterator.buffered", "link" : "silex\/Source.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/Source.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/Source.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Character) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/Source.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Character) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/Source.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Character) ⇒ Boolean): Option[Character]", "member" : "scala.collection.Iterator.find", "link" : "silex\/Source.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "silex\/Source.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Character) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "silex\/Source.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Character) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "silex\/Source.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Character) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "silex\/Source.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "silex\/Source.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Character, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "silex\/Source.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "silex\/Source.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Character, B)]", "member" : "scala.collection.Iterator.zip", "link" : "silex\/Source.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.dropWhile", "link" : "silex\/Source.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Character) ⇒ Boolean): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.span", "link" : "silex\/Source.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Character) ⇒ Boolean): (Iterator[Character], Iterator[Character])", "member" : "scala.collection.Iterator.partition", "link" : "silex\/Source.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.takeWhile", "link" : "silex\/Source.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Character, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "silex\/Source.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Character) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "silex\/Source.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Character, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "silex\/Source.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.filterNot", "link" : "silex\/Source.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.withFilter", "link" : "silex\/Source.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Character, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "silex\/Source.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Character) ⇒ Boolean): Iterator[Character]", "member" : "scala.collection.Iterator.filter", "link" : "silex\/Source.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Character) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "silex\/Source.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "silex\/Source.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Character) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "silex\/Source.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Character]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "silex\/Source.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Character]", "member" : "scala.collection.Iterator.slice", "link" : "silex\/Source.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Character]", "member" : "scala.collection.Iterator.drop", "link" : "silex\/Source.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Character]", "member" : "scala.collection.Iterator.take", "link" : "silex\/Source.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "silex\/Source.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "silex\/Source.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "silex\/Source.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Character]", "member" : "scala.collection.Iterator.seq", "link" : "silex\/Source.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/Source.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/Source.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/Source.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/Source.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/Source.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/Source.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Character, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "silex\/Source.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Character, Col[Character]]): Col[Character]", "member" : "scala.collection.TraversableOnce.to", "link" : "silex\/Source.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Character]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "silex\/Source.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "silex\/Source.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "silex\/Source.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Character]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "silex\/Source.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Character]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "silex\/Source.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Character]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "silex\/Source.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Character]", "member" : "scala.collection.TraversableOnce.toList", "link" : "silex\/Source.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "silex\/Source.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/Source.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/Source.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "silex\/Source.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Character) ⇒ B)(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.minBy", "link" : "silex\/Source.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Character) ⇒ B)(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "silex\/Source.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.max", "link" : "silex\/Source.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Character", "member" : "scala.collection.TraversableOnce.min", "link" : "silex\/Source.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "silex\/Source.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "silex\/Source.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Character) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "silex\/Source.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "silex\/Source.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "silex\/Source.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "silex\/Source.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Character, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "silex\/Source.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Character) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "silex\/Source.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "silex\/Source.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "silex\/Source.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "silex\/Source.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "silex\/Source.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Character, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "silex\/Source.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Character) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "silex\/Source.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Character, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "silex\/Source.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Character) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "silex\/Source.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "silex\/Source.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "silex\/Source.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Character]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "silex\/Source.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "silex\/Source.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/Source.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/Source.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/Source.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/Source.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/Source.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/Source.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Source.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Source.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Source.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/Source.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/Source.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/Source.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/Source.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/Source.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/Source.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/Source.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/Source.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "currentPosition", "tail" : "(): Position", "member" : "silex.Source.currentPosition", "link" : "silex\/Source.html#currentPosition:Position", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "silex.Source.reset", "link" : "silex\/Source.html#reset():Unit", "kind" : "abstract def"}, {"label" : "mark", "tail" : "(): Unit", "member" : "silex.Source.mark", "link" : "silex\/Source.html#mark():Unit", "kind" : "abstract def"}, {"label" : "commit", "tail" : "(): (Position, Iterable[Character], Position)", "member" : "silex.Source.commit", "link" : "silex\/Source.html#commit():(Position,Iterable[Character],Position)", "kind" : "abstract def"}, {"label" : "next", "tail" : "(): Character", "member" : "scala.collection.Iterator.next", "link" : "silex\/Source.html#next():A", "kind" : "abstract def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasNext", "link" : "silex\/Source.html#hasNext:Boolean", "kind" : "abstract def"}], "shortDescription" : "Represents iterators with Positions and ability to mark points and reset to them.", "object" : "silex\/Source$.html", "members_object" : [{"label" : "fromIterator", "tail" : "(iterator: Iterator[Character], positioner: Positioner[Character, Position]): Source[Character, Position]", "member" : "silex.Source.fromIterator", "link" : "silex\/Source$.html#fromIterator[Character,Position](iterator:Iterator[Character],positioner:silex.Positioner[Character,Position]):silex.Source[Character,Position]", "kind" : "def"}, {"label" : "fromArray", "tail" : "(array: Array[Character], positioner: Positioner[Character, Position]): Source[Character, Position]", "member" : "silex.Source.fromArray", "link" : "silex\/Source$.html#fromArray[Character,Position](array:Array[Character],positioner:silex.Positioner[Character,Position]):silex.Source[Character,Position]", "kind" : "def"}, {"label" : "fromString", "tail" : "(string: String, positioner: Positioner[Char, Position]): Source[Char, Position]", "member" : "silex.Source.fromString", "link" : "silex\/Source$.html#fromString[Position](string:String,positioner:silex.Positioner[Char,Position]):silex.Source[Char,Position]", "kind" : "def"}, {"label" : "fromString", "tail" : "(string: String): Source[Char, StringPosition]", "member" : "silex.Source.fromString", "link" : "silex\/Source$.html#fromString(string:String):silex.Source[Char,silex.StringPosition]", "kind" : "def"}, {"label" : "fromFile", "tail" : "(file: String, positioner: Positioner[Char, Position], charset: Charset, inMemory: Boolean): Source[Char, Position]", "member" : "silex.Source.fromFile", "link" : "silex\/Source$.html#fromFile[Position](file:String,positioner:silex.Positioner[Char,Position],charset:java.nio.charset.Charset,inMemory:Boolean):silex.Source[Char,Position]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/Source$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/Source$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/Source$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/Source$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/Source$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/Source$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/Source$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Source$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Source$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/Source$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/Source$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/Source$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/Source$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/Source$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/Source$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/Source$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/Source$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/Source$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/Source$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "silex\/Source.html", "kind" : "trait"}, {"name" : "silex.StringPosition", "shortDescription" : "Position within a string.", "members_case class" : [{"label" : "+", "tail" : "(char: Char): StringPosition", "member" : "silex.StringPosition.+", "link" : "silex\/StringPosition.html#+(char:Char):silex.StringPosition", "kind" : "def"}, {"member" : "silex.StringPosition#<init>", "error" : "unsupported entity"}, {"label" : "column", "tail" : ": Int", "member" : "silex.StringPosition.column", "link" : "silex\/StringPosition.html#column:Int", "kind" : "val"}, {"label" : "line", "tail" : ": Int", "member" : "silex.StringPosition.line", "link" : "silex\/StringPosition.html#line:Int", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "silex.StringPosition.index", "link" : "silex\/StringPosition.html#index:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/StringPosition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/StringPosition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/StringPosition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/StringPosition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/StringPosition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/StringPosition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/StringPosition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringPosition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringPosition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringPosition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/StringPosition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/StringPosition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/StringPosition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/StringPosition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/StringPosition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/StringPosition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "silex\/StringPosition.html", "kind" : "case class"}, {"name" : "silex.StringPositioner", "shortDescription" : "Positioner for silex.StringPosition.", "object" : "silex\/StringPositioner$.html", "members_object" : [{"label" : "increment", "tail" : "(position: StringPosition, character: Char): StringPosition", "member" : "silex.StringPositioner.increment", "link" : "silex\/StringPositioner$.html#increment(position:silex.StringPosition,character:Char):silex.StringPosition", "kind" : "def"}, {"label" : "start", "tail" : ": StringPosition", "member" : "silex.StringPositioner.start", "link" : "silex\/StringPositioner$.html#start:silex.StringPosition", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/StringPositioner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/StringPositioner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/StringPositioner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/StringPositioner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/StringPositioner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/StringPositioner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/StringPositioner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringPositioner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringPositioner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringPositioner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/StringPositioner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/StringPositioner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/StringPositioner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/StringPositioner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/StringPositioner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/StringPositioner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/StringPositioner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/StringPositioner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/StringPositioner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "silex.StringSource", "shortDescription" : "Source over an array of character.", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "silex\/StringSource.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]withIterator[Seq[B]]", "kind" : "class"}, {"label" : "commit", "tail" : "(): (Position, Iterable[Char], Position)", "member" : "silex.StringSource.commit", "link" : "silex\/StringSource.html#commit():(Position,Iterable[Char],Position)", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "silex.StringSource.reset", "link" : "silex\/StringSource.html#reset():Unit", "kind" : "def"}, {"label" : "mark", "tail" : "(): Unit", "member" : "silex.StringSource.mark", "link" : "silex\/StringSource.html#mark():Unit", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "silex.StringSource.hasNext", "link" : "silex\/StringSource.html#hasNext:Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): Char", "member" : "silex.StringSource.next", "link" : "silex\/StringSource.html#next():Char", "kind" : "def"}, {"label" : "currentPosition", "tail" : "(): Position", "member" : "silex.StringSource.currentPosition", "link" : "silex\/StringSource.html#currentPosition:Position", "kind" : "def"}, {"member" : "silex.StringSource#<init>", "error" : "unsupported entity"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "silex.Source.finalize", "link" : "silex\/StringSource.html#finalize():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "silex.Source.close", "link" : "silex\/StringSource.html#close():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "silex\/StringSource.html#toString():String", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Char]", "member" : "scala.collection.Iterator.toStream", "link" : "silex\/StringSource.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Char]", "member" : "scala.collection.Iterator.toIterator", "link" : "silex\/StringSource.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Char]", "member" : "scala.collection.Iterator.toTraversable", "link" : "silex\/StringSource.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: Iterator[_]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "silex\/StringSource.html#sameElements(that:Iterator[_]):Boolean", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.Iterator.copyToArray", "link" : "silex\/StringSource.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: Iterator[B], replaced: Int): Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "silex\/StringSource.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (Iterator[Char], Iterator[Char])", "member" : "scala.collection.Iterator.duplicate", "link" : "silex\/StringSource.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "silex\/StringSource.html#length:Int", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "silex\/StringSource.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "silex\/StringSource.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): BufferedIterator[Char]", "member" : "scala.collection.Iterator.buffered", "link" : "silex\/StringSource.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/StringSource.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "silex\/StringSource.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Char) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/StringSource.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Char) ⇒ Boolean): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "silex\/StringSource.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Char) ⇒ Boolean): Option[Char]", "member" : "scala.collection.Iterator.find", "link" : "silex\/StringSource.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "silex\/StringSource.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Char) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.exists", "link" : "silex\/StringSource.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Char) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.forall", "link" : "silex\/StringSource.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Char) ⇒ U): Unit", "member" : "scala.collection.Iterator.foreach", "link" : "silex\/StringSource.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterator[B], thisElem: A1, thatElem: B1): Iterator[(A1, B1)]", "member" : "scala.collection.Iterator.zipAll", "link" : "silex\/StringSource.html#zipAll[B,A1>:A,B1>:B](that:Iterator[B],thisElem:A1,thatElem:B1):Iterator[(A1,B1)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Iterator[(Char, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "silex\/StringSource.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: A1): Iterator[A1]", "member" : "scala.collection.Iterator.padTo", "link" : "silex\/StringSource.html#padTo[A1>:A](len:Int,elem:A1):Iterator[A1]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Iterator[B]): Iterator[(Char, B)]", "member" : "scala.collection.Iterator.zip", "link" : "silex\/StringSource.html#zip[B](that:Iterator[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.dropWhile", "link" : "silex\/StringSource.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Char) ⇒ Boolean): (Iterator[Char], Iterator[Char])", "member" : "scala.collection.Iterator.span", "link" : "silex\/StringSource.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Char) ⇒ Boolean): (Iterator[Char], Iterator[Char])", "member" : "scala.collection.Iterator.partition", "link" : "silex\/StringSource.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.takeWhile", "link" : "silex\/StringSource.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Char, B) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "silex\/StringSource.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Char) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "silex\/StringSource.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Char, B]): Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "silex\/StringSource.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.filterNot", "link" : "silex\/StringSource.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.withFilter", "link" : "silex\/StringSource.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenTraversableOnce[B])(p: (Char, B) ⇒ Boolean): Boolean", "member" : "scala.collection.Iterator.corresponds", "link" : "silex\/StringSource.html#corresponds[B](that:scala.collection.GenTraversableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Char) ⇒ Boolean): Iterator[Char]", "member" : "scala.collection.Iterator.filter", "link" : "silex\/StringSource.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Char) ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "silex\/StringSource.html#flatMap[B](f:A=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ⇒ GenTraversableOnce[B]): Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "silex\/StringSource.html#++[B>:A](that:=>scala.collection.GenTraversableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Char) ⇒ B): Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "silex\/StringSource.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): Iterator[Char]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "silex\/StringSource.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Iterator[Char]", "member" : "scala.collection.Iterator.slice", "link" : "silex\/StringSource.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Iterator[Char]", "member" : "scala.collection.Iterator.drop", "link" : "silex\/StringSource.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Iterator[Char]", "member" : "scala.collection.Iterator.take", "link" : "silex\/StringSource.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "silex\/StringSource.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isTraversableAgain", "link" : "silex\/StringSource.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "silex\/StringSource.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): Iterator[Char]", "member" : "scala.collection.Iterator.seq", "link" : "silex\/StringSource.html#seq:Iterator[A]", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/StringSource.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/StringSource.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "silex\/StringSource.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/StringSource.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/StringSource.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "silex\/StringSource.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Char, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "silex\/StringSource.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Char, Col[Char]]): Col[Char]", "member" : "scala.collection.TraversableOnce.to", "link" : "silex\/StringSource.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Char]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "silex\/StringSource.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "silex\/StringSource.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "silex\/StringSource.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Char]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "silex\/StringSource.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Char]", "member" : "scala.collection.TraversableOnce.toSeq", "link" : "silex\/StringSource.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Char]", "member" : "scala.collection.TraversableOnce.toIterable", "link" : "silex\/StringSource.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Char]", "member" : "scala.collection.TraversableOnce.toList", "link" : "silex\/StringSource.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "silex\/StringSource.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/StringSource.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "silex\/StringSource.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "silex\/StringSource.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Char) ⇒ B)(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.minBy", "link" : "silex\/StringSource.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Char) ⇒ B)(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "silex\/StringSource.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.max", "link" : "silex\/StringSource.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Char", "member" : "scala.collection.TraversableOnce.min", "link" : "silex\/StringSource.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "silex\/StringSource.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "silex\/StringSource.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Char) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "silex\/StringSource.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "silex\/StringSource.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "silex\/StringSource.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "silex\/StringSource.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Char, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "silex\/StringSource.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Char) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "silex\/StringSource.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Char, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceRight", "link" : "silex\/StringSource.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Char) ⇒ B): B", "member" : "scala.collection.TraversableOnce.reduceLeft", "link" : "silex\/StringSource.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Char, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldRight", "link" : "silex\/StringSource.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Char) ⇒ B): B", "member" : "scala.collection.TraversableOnce.foldLeft", "link" : "silex\/StringSource.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Char, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "silex\/StringSource.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Char) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "silex\/StringSource.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Char, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "silex\/StringSource.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Char) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "silex\/StringSource.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "silex\/StringSource.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.TraversableOnce.size", "link" : "silex\/StringSource.html#size:Int", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Char]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "silex\/StringSource.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "silex\/StringSource.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/StringSource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/StringSource.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/StringSource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/StringSource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/StringSource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/StringSource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringSource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringSource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/StringSource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/StringSource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/StringSource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/StringSource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/StringSource.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/StringSource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/StringSource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/StringSource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/StringSource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "silex\/StringSource.html", "kind" : "class"}], "silex.util" : [{"name" : "silex.util.Zippers", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "silex\/util\/Zippers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "silex\/util\/Zippers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "silex\/util\/Zippers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "silex\/util\/Zippers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "silex\/util\/Zippers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "silex\/util\/Zippers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "silex\/util\/Zippers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/util\/Zippers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/util\/Zippers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "silex\/util\/Zippers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "silex\/util\/Zippers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "silex\/util\/Zippers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "silex\/util\/Zippers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "silex\/util\/Zippers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "silex\/util\/Zippers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "silex\/util\/Zippers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "silex\/util\/Zippers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "silex\/util\/Zippers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "silex\/util\/Zippers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Implements conversion to DFA through Brzozowski derivation and zippers.", "trait" : "silex\/util\/Zippers.html", "kind" : "trait"}]};